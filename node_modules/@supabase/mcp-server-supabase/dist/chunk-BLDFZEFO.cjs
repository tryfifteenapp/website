"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkTTME4LEFcjs = require('./chunk-TTME4LEF.cjs');var _chunkTTHZ6XJ5cjs = require('./chunk-TTHZ6XJ5.cjs');var _multipartparser = require('@mjackson/multipart-parser');var _posix = require('path/posix');var _url = require('url');var _openapifetch = require('openapi-fetch'); var _openapifetch2 = _interopRequireDefault(_openapifetch);var _zod = require('zod');function v(i,g,l={}){return _openapifetch2.default.call(void 0, {baseUrl:i,headers:{Authorization:`Bearer ${g}`,...l}})}var $=_zod.z.object({message:_zod.z.string()});function r(i,g){if("error"in i){if(i.response.status===401)throw new Error("Unauthorized. Please provide a valid access token to the MCP server via the --access-token flag or SUPABASE_ACCESS_TOKEN.");let{data:l}=$.safeParse(i.error);throw l?new Error(l.message):new Error(g)}}var H="ABCDEFGHIJKLMNOPQRSTUVWXYZ",N="abcdefghijklmnopqrstuvwxyz",I="0123456789",K="!@#$%^&*()_+~`|}{[]:;?><,./-=",U=({length:i=10,numbers:g=!1,symbols:l=!1,uppercase:y=!0,lowercase:a=!0}={})=>{let d="";if(y&&(d+=H),a&&(d+=N),g&&(d+=I),l&&(d+=K),d.length===0)throw new Error("at least one character set must be selected");let w=new Uint32Array(i);crypto.getRandomValues(w);let O="";for(let h=0;h<i;h++){let b=w[h]%d.length;O+=d.charAt(b)}return O};var{version:W}=_chunkTTHZ6XJ5cjs.a;function le(i){let{accessToken:g,apiUrl:l}=i,y=_nullishCoalesce(l, () => ("https://api.supabase.com")),a=v(y,g),d={async listOrganizations(){let t=await a.GET("/v1/organizations");return r(t,"Failed to fetch organizations"),t.data},async getOrganization(t){let e=await a.GET("/v1/organizations/{slug}",{params:{path:{slug:t}}});return r(e,"Failed to fetch organization"),e.data},async listProjects(){let t=await a.GET("/v1/projects");return r(t,"Failed to fetch projects"),t.data},async getProject(t){let e=await a.GET("/v1/projects/{ref}",{params:{path:{ref:t}}});return r(e,"Failed to fetch project"),e.data},async createProject(t){let{name:e,organization_id:s,region:n,db_pass:o}=_chunkTTME4LEFcjs.g.parse(t),p=await a.POST("/v1/projects",{body:{name:e,region:n,organization_id:s,db_pass:_nullishCoalesce(o, () => (U({length:16,numbers:!0,uppercase:!0,lowercase:!0})))}});return r(p,"Failed to create project"),p.data},async pauseProject(t){let e=await a.POST("/v1/projects/{ref}/pause",{params:{path:{ref:t}}});r(e,"Failed to pause project")},async restoreProject(t){let e=await a.POST("/v1/projects/{ref}/restore",{params:{path:{ref:t}}});r(e,"Failed to restore project")}},w={async executeSql(t,e){let{query:s,read_only:n}=_chunkTTME4LEFcjs.k.parse(e),o=await a.POST("/v1/projects/{ref}/database/query",{params:{path:{ref:t}},body:{query:s,read_only:n}});return r(o,"Failed to execute SQL query"),o.data},async listMigrations(t){let e=await a.GET("/v1/projects/{ref}/database/migrations",{params:{path:{ref:t}}});return r(e,"Failed to fetch migrations"),e.data},async applyMigration(t,e){let{name:s,query:n}=_chunkTTME4LEFcjs.l.parse(e),o=await a.POST("/v1/projects/{ref}/database/migrations",{params:{path:{ref:t}},body:{name:s,query:n}});r(o,"Failed to apply migration")}},O={async getLogs(t,e){let{sql:s,iso_timestamp_start:n,iso_timestamp_end:o}=_chunkTTME4LEFcjs.n.parse(e),p=await a.GET("/v1/projects/{ref}/analytics/endpoints/logs.all",{params:{path:{ref:t},query:{sql:s,iso_timestamp_start:n,iso_timestamp_end:o}}});return r(p,"Failed to fetch logs"),p.data},async getSecurityAdvisors(t){let e=await a.GET("/v1/projects/{ref}/advisors/security",{params:{path:{ref:t}}});return r(e,"Failed to fetch security advisors"),e.data},async getPerformanceAdvisors(t){let e=await a.GET("/v1/projects/{ref}/advisors/performance",{params:{path:{ref:t}}});return r(e,"Failed to fetch performance advisors"),e.data}},h={async getProjectUrl(t){let e=new URL(y);return`https://${t}.${Q(e.hostname)}`},async getAnonKey(t){let e=await a.GET("/v1/projects/{ref}/api-keys",{params:{path:{ref:t},query:{reveal:!1}}});r(e,"Failed to fetch API keys");let s=_optionalChain([e, 'access', _2 => _2.data, 'optionalAccess', _3 => _3.find, 'call', _4 => _4(n=>n.name==="anon")]);if(!_optionalChain([s, 'optionalAccess', _5 => _5.api_key]))throw new Error("Anonymous key not found");return s.api_key},async generateTypescriptTypes(t){let e=await a.GET("/v1/projects/{ref}/types/typescript",{params:{path:{ref:t}}});return r(e,"Failed to fetch TypeScript types"),e.data}},b={async listEdgeFunctions(t){let e=await a.GET("/v1/projects/{ref}/functions",{params:{path:{ref:t}}});return r(e,"Failed to fetch Edge Functions"),await Promise.all(e.data.map(async s=>await b.getEdgeFunction(t,s.slug)))},async getEdgeFunction(t,e){let s=await a.GET("/v1/projects/{ref}/functions/{function_slug}",{params:{path:{ref:t,function_slug:e}}});if(s.error)throw s.error;r(s,"Failed to fetch Edge Function");let n=s.data,o=_chunkTTHZ6XJ5cjs.e.call(void 0, t,n.id,n.version),p=_chunkTTHZ6XJ5cjs.f.call(void 0, o),E=n.entrypoint_path?_posix.relative.call(void 0, p,_url.fileURLToPath.call(void 0, n.entrypoint_path,{windows:!1})):void 0,F=n.import_map_path?_posix.relative.call(void 0, p,_url.fileURLToPath.call(void 0, n.import_map_path,{windows:!1})):void 0,m=await a.GET("/v1/projects/{ref}/functions/{function_slug}/body",{params:{path:{ref:t,function_slug:e}},headers:{Accept:"multipart/form-data"},parseAs:"stream"});r(m,"Failed to fetch Edge Function files");let c=m.response.headers.get("content-type");if(!c||!c.startsWith("multipart/form-data"))throw new Error(`Unexpected content type: ${c}. Expected multipart/form-data.`);let f=_multipartparser.getMultipartBoundary.call(void 0, c);if(!f)throw new Error("No multipart boundary found in response headers");if(!m.data)throw new Error("No data received from Edge Function body");let S=[],T=_multipartparser.parseMultipartStream.call(void 0, m.data,{boundary:f});for await(let u of T)u.isFile&&u.filename&&S.push({name:_posix.relative.call(void 0, p,u.filename),content:u.text});return{...n,entrypoint_path:E,import_map_path:F,files:S}},async deployEdgeFunction(t,e){let{name:s,entrypoint_path:n,import_map_path:o,files:p}=_chunkTTME4LEFcjs.j.parse(e),E;try{E=await b.getEdgeFunction(t,s)}catch (e2){}let F=p.find(c=>["deno.json","import_map.json"].includes(c.name));o??=_nullishCoalesce(_optionalChain([E, 'optionalAccess', _6 => _6.import_map_path]), () => (_optionalChain([F, 'optionalAccess', _7 => _7.name])));let m=await a.POST("/v1/projects/{ref}/functions/deploy",{params:{path:{ref:t},query:{slug:s}},body:{metadata:{name:s,entrypoint_path:n,import_map_path:o},file:p},bodySerializer(c){let f=new FormData,S=new Blob([JSON.stringify(c.metadata)],{type:"application/json"});return f.append("metadata",S),_optionalChain([c, 'access', _8 => _8.file, 'optionalAccess', _9 => _9.forEach, 'call', _10 => _10(T=>{let u=T,z=new Blob([u.content],{type:"application/typescript"});f.append("file",z,u.name)})]),f}});return r(m,"Failed to deploy Edge Function"),m.data}};return{async init(t){let{clientInfo:e}=t;if(!e)throw new Error("Client info is required");a=v(y,g,{"User-Agent":`supabase-mcp/${W} (${e.name}/${e.version})`})},account:d,database:w,debugging:O,development:h,functions:b,branching:{async listBranches(t){let e=await a.GET("/v1/projects/{ref}/branches",{params:{path:{ref:t}}});return e.response.status===422?[]:(r(e,"Failed to list branches"),e.data)},async createBranch(t,e){let{name:s}=_chunkTTME4LEFcjs.h.parse(e),n=await a.POST("/v1/projects/{ref}/branches",{params:{path:{ref:t}},body:{branch_name:s}});return r(n,"Failed to create branch"),n.data},async deleteBranch(t){let e=await a.DELETE("/v1/branches/{branch_id}",{params:{path:{branch_id:t}}});r(e,"Failed to delete branch")},async mergeBranch(t){let e=await a.POST("/v1/branches/{branch_id}/merge",{params:{path:{branch_id:t}},body:{}});r(e,"Failed to merge branch")},async resetBranch(t,e){let{migration_version:s}=_chunkTTME4LEFcjs.i.parse(e),n=await a.POST("/v1/branches/{branch_id}/reset",{params:{path:{branch_id:t}},body:{migration_version:s}});r(n,"Failed to reset branch")},async rebaseBranch(t){let e=await a.POST("/v1/branches/{branch_id}/push",{params:{path:{branch_id:t}},body:{}});r(e,"Failed to rebase branch")}},storage:{async listAllBuckets(t){let e=await a.GET("/v1/projects/{ref}/storage/buckets",{params:{path:{ref:t}}});return r(e,"Failed to list storage buckets"),e.data},async getStorageConfig(t){let e=await a.GET("/v1/projects/{ref}/config/storage",{params:{path:{ref:t}}});return r(e,"Failed to get storage config"),e.data},async updateStorageConfig(t,e){let s=await a.PATCH("/v1/projects/{ref}/config/storage",{params:{path:{ref:t}},body:{fileSizeLimit:e.fileSizeLimit,features:{imageTransformation:{enabled:e.features.imageTransformation.enabled},s3Protocol:{enabled:e.features.s3Protocol.enabled}}}});return r(s,"Failed to update storage config"),s.data}}}}function Q(i){switch(i){case"api.supabase.com":return"supabase.co";case"api.supabase.green":return"supabase.green";default:return"supabase.red"}}exports.a = le;
//# sourceMappingURL=chunk-BLDFZEFO.cjs.map